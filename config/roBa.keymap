#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        user {
            bindings = <&username>;
            key-positions = <39 41>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        h2: h2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp KP_SLASH &kp H &kp KP_NUMBER_2 &kp LANG1>;
            label = "H2";
        };

        h3: h3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp KP_SLASH &kp H &kp KP_NUMBER_3 &kp LANG1>;
            label = "H3";
        };

        h4: h4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp KP_SLASH &kp H &kp KP_NUMBER_4 &kp LANG1>;
            label = "H4";
        };

        username: password1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp A &kp Z &kp U &kp R &kp E &kp KP_N6 &kp KP_N1 &kp KP_N4 &kp LANG1>;
            label = "PASSWORD1";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC         &kp LG(W)     &kp F13       &kp F14    &kp TAB                                              &kp F15    &none          &none     &kp UP    &kp LC(UP_ARROW)
&kp LG(A)       &kp LG(S)     &kp LG(D)     &kp LG(F)  &none        &kp LG(KP_NUMBER_0)      &none          &none      &kp LG(RIGHT)  &kp LEFT  &kp DOWN  &kp RIGHT
&kp LG(Z)       &kp LG(X)     &kp LG(C)     &kp LG(V)  &kp LG(B)    &kp LANG2                &kp LANG1      &none      &kp LG(LEFT)   &mkp MB1  &mo 5     &mkp MB2
&kp LEFT_SHIFT  &kp LEFT_WIN  &kp LEFT_ALT  &mo 3      &lt 2 SPACE  &mo 5                    &kp BACKSPACE  &kp ENTER                                     &mt RCTRL DEL
            >;

            sensor-bindings = <&inc_dec_kp LG(KP_PLUS) LG(KP_MINUS)>;
        };

        none {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        simbol {
            bindings = <
&kp GRAVE      &kp LS(DQT)   &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)                            &kp LS(AMPS)  &kp SINGLE_QUOTE  &kp LS(LPAR)  &kp LS(RPAR)   &kp AT
&kp LS(EQUAL)  &kp LS(PLUS)  &kp LS(STAR)   &kp MINUS     &kp LS(TILDE)  &trans      &trans        &kp COLON     &kp SEMICOLON     &kp LBKT      &kp RBKT       &kp LS(UNDER)
&none          &kp LS(LT)    &kp LS(GT)     &none         &none          &trans      &kp CAPSLOCK  &none         &none             &kp LS(EXCL)  &kp LS(QMARK)  &kp FSLH
&trans         &trans        &trans         &trans        &trans         &trans      &trans        &trans                                                       &trans
            >;
        };

        number {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4   &kp F5                       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_EQUAL     &kp KP_PLUS
&kp F6        &kp F7        &kp F8        &kp F9   &kp F10  &trans      &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_DOT       &kp KP_MINUS
&kp F11       &kp F12       &kp F13       &kp F14  &kp F15  &trans      &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_0  &kp KP_SLASH
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans   &trans   &trans      &trans  &trans                                                              &kp KP_ASTERISK
            >;
        };

        none2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        input {
            bindings = <
&kp Q   &kp W   &kp E   &kp R   &kp T                       &kp Y   &kp U  &kp I      &kp O    &kp P
&kp A   &kp S   &kp D   &kp F   &kp G   &trans      &trans  &kp H   &kp J  &kp K      &kp L    &kp MINUS
&kp Z   &kp X   &kp C   &kp V   &kp B   &trans      &trans  &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                             &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
