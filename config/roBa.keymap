#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        user {
            bindings = <&username>;
            key-positions = <39 41>;
        };

        function {
            bindings = <&mo 10>;
            key-positions = <37 13>;
        };

        setting {
            bindings = <&mo 11>;
            key-positions = <11 37>;
        };
    };

    macros {
        h2: h2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp KP_SLASH &kp H &kp KP_NUMBER_2 &kp LANG1>;
            label = "H2";
        };

        h3: h3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp KP_SLASH &kp H &kp KP_NUMBER_3 &kp LANG1>;
            label = "H3";
        };

        h4: h4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp KP_SLASH &kp H &kp KP_NUMBER_4 &kp LANG1>;
            label = "H4";
        };

        username: password1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG2 &kp A &kp Z &kp U &kp R &kp E &kp KP_N6 &kp KP_N1 &kp KP_N4 &kp LANG1>;
            label = "PASSWORD1";
        };

        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        bt_mac: bt_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 0 &tog_off 1 &tog_off 2 &tog_off 3 &tog_off 4 &tog_off 5 &tog_off 6 &tog_off 7 &tog_off 8 &tog_off 9>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 0>,
                <&macro_wait_time 500>,
                <&tog_on 0>;

            label = "BT_MAC";
        };

        bt_ipad: bt_ipad {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 0 &tog_off 1 &tog_off 2 &tog_off 3 &tog_off 4 &tog_off 5 &tog_off 6 &tog_off 7 &tog_off 8 &tog_off 9>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 1>,
                <&macro_wait_time 500>,
                <&tog_on 1>;

            label = "BT_IPAD";
        };

        bt_iphone: bt_iphone {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 0 &tog_off 1 &tog_off 2 &tog_off 3 &tog_off 4 &tog_off 5 &tog_off 6 &tog_off 7 &tog_off 8 &tog_off 9>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 2>,
                <&macro_wait_time 500>,
                <&tog_on 2>;

            label = "BT_IPHONE";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_default_layer {
            bindings = <
&kp ESC          &kp LG(W)     &kp LG(E)     &kp LG(R)  &kp TAB                                              &kp LC(UP_ARROW)   &kp F15        &mt F13 LEFT_SHIFT  &kp UP    &mt F14 RIGHT_SHIFT
&kp LG(A)        &kp LG(S)     &kp LG(D)     &kp LG(F)  &kp LG(G)    &kp LG(KP_NUMBER_0)      &none          &kp LG(SPACE)      &kp LG(RIGHT)  &kp LEFT            &kp DOWN  &kp RIGHT
&mt LCTRL LG(Z)  &kp LG(X)     &kp LG(C)     &kp LG(V)  &kp LG(B)    &mt CAPSLOCK LANG2       &kp LANG1      &kp LA(LS(LG(L)))  &kp LG(LEFT)   &mkp MB1            &mo 8     &mkp MB2
&kp LEFT_SHIFT   &kp LEFT_WIN  &kp LEFT_ALT  &mo 9      &lt 6 SPACE  &mo 3                    &kp BACKSPACE  &kp ENTER                                                       &mt RCTRL DEL
            >;

            sensor-bindings = <&inc_dec_kp LG(KP_PLUS) LG(KP_MINUS)>;
        };

        ipad_default_layer {
            bindings = <
&kp ESC             &kp LG(W)         &kp LG(E)     &kp LG(R)  &kp TAB                                                &none          &kp LG(LS(N3))         &none           &kp UP_ARROW    &none
&mt CAPSLOCK LG(A)  &kp LG(S)         &kp LG(D)     &kp LG(F)  &kp LG(G)    &none                  &none              &kp LG(H)      &kp LG(RIGHT_BRACKET)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
&mt LCTRL LG(Z)     &kp LG(X)         &kp LG(C)     &kp LG(V)  &kp LG(B)    &kp LC(LS(SPACE))      &kp LC(LS(SPACE))  &kp LG(LA(D))  &kp LG(LEFT_BRACKET)   &mkp MB1        &mo 8           &mkp MB2
&kp LEFT_SHIFT      &kp LEFT_COMMAND  &kp LEFT_ALT  &mo 9      &lt 6 SPACE  &mo 4                  &kp BACKSPACE      &kp ENTER                                                             &mt RCTRL DEL
            >;
        };

        iphone_default {
            bindings = <
&kp ESC             &kp LG(W)         &kp LG(E)     &kp LG(R)  &kp TAB                                                &none          &kp LG(LS(N3))         &none           &kp UP_ARROW    &none
&mt CAPSLOCK LG(A)  &kp LG(S)         &kp LG(D)     &kp LG(F)  &kp LG(G)    &none                  &none              &kp LG(H)      &kp LG(RIGHT_BRACKET)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
&mt LCTRL LG(Z)     &kp LG(X)         &kp LG(C)     &kp LG(V)  &kp LG(B)    &kp LC(LS(SPACE))      &kp LC(LS(SPACE))  &kp LG(LA(D))  &kp LG(LEFT_BRACKET)   &mkp MB1        &mo 8           &mkp MB2
&kp LEFT_SHIFT      &kp LEFT_COMMAND  &kp LEFT_ALT  &mo 9      &lt 7 SPACE  &mo 5                  &kp BACKSPACE      &kp ENTER                                                             &mt RCTRL DEL
            >;
        };

        mac_input {
            bindings = <
&kp Q      &kp W     &kp E     &kp R  &kp T                                       &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A      &kp S     &kp D     &kp F  &kp G        &kp LG(KP_N0)       &trans     &kp H      &kp J  &kp K      &kp L    &kp MINUS
&kp Z      &kp X     &kp C     &kp V  &kp B        &mt CAPS LANG2      &kp LANG1  &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH
&kp LSHFT  &kp LGUI  &kp LALT  &mo 9  &lt 6 SPACE  &trans              &kp BSPC   &kp ENTER                             &kp DELETE
            >;
        };

        ipad_input {
            bindings = <
&kp Q      &kp W     &kp E     &kp R  &kp T                                                  &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A      &kp S     &kp D     &kp F  &kp G        &kp LG(KP_N0)          &trans             &kp H      &kp J  &kp K      &kp L    &kp MINUS
&kp Z      &kp X     &kp C     &kp V  &kp B        &kp LC(LS(SPACE))      &kp LC(LS(SPACE))  &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH
&kp LSHFT  &kp LGUI  &kp LALT  &mo 9  &lt 6 SPACE  &trans                 &kp BSPC           &kp ENTER                             &kp DELETE
            >;
        };

        iphone_input {
            bindings = <
&kp Q      &kp W     &kp E     &kp R  &kp T                                                  &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A      &kp S     &kp D     &kp F  &kp G        &kp LG(KP_N0)          &trans             &kp H      &kp J  &kp K      &kp L    &kp MINUS
&kp Z      &kp X     &kp C     &kp V  &kp B        &kp LC(LS(SPACE))      &kp LC(LS(SPACE))  &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH
&kp LSHFT  &kp LGUI  &kp LALT  &mo 9  &lt 7 SPACE  &trans                 &kp BSPC           &kp ENTER                             &kp DELETE
            >;
        };

        simbol {
            bindings = <
&kp EXCLAMATION   &kp DOUBLE_QUOTES  &kp HASH      &kp DOLLAR  &kp PERCENT                        &kp LS(AMPERSAND)  &kp SINGLE_QUOTE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT
&kp LS(QUESTION)  &kp LS(PLUS)       &kp LS(STAR)  &kp MINUS   &kp LS(TILDE)  &trans      &trans  &kp COLON          &kp SEMICOLON     &kp LBKT              &kp RBKT               &kp LS(UNDERSCORE)
&none             &none              &none         &none       &none          &trans      &none   &none              &none             &kp EXCLAMATION       &kp QUESTION           &kp FSLH
&trans            &trans             &trans        &trans      &trans         &trans      &trans  &trans                                                                            &trans
            >;
        };

        iphone_simbol {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR  &kp PERCENT                        &kp CARET  &kp AMPERSAND  &kp ASTRK          &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET
&kp QUESTION     &kp LS(PLUS)  &kp LS(STAR)  &kp MINUS   &kp LS(TILDE)  &trans      &trans  &kp SQT    &kp SEMICOLON  &kp RIGHT_BRACKET  &kp GRAVE              &kp LS(MINUS)
&none            &none         &none         &none       &none          &trans      &none   &none      &none          &kp EXCLAMATION    &kp QUESTION           &kp FSLH
&trans           &trans        &trans        &trans      &trans         &trans      &trans  &trans                                                              &trans
            >;
        };

        scroll {
            bindings = <
&none  &none  &none  &none  &none                    &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none      &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none      &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none      &none  &none                       &none
            >;
        };

        number {
            bindings = <
&none  &none  &none  &none   &none                               &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_EQUAL     &kp KP_PLUS
&none  &none  &none  &none   &none   &trans      &kp KP_NUMLOCK  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_DOT       &kp KP_MINUS
&none  &none  &none  &none   &none   &trans      &trans          &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_0  &kp KP_SLASH
&none  &none  &none  &trans  &trans  &trans      &trans          &trans                                                              &kp KP_ASTERISK
            >;
        };

        Function {
            bindings = <
&none  &none  &none  &none   &none                       &kp F1   &kp F2   &kp F3  &kp F4  &kp F5
&none  &none  &none  &none   &none   &none       &none   &kp F6   &kp F7   &kp F8  &kp F9  &kp F10
&none  &none  &none  &none   &none   &none       &none   &kp F11  &kp F12  &none   &none   &none
&none  &none  &none  &trans  &trans  &trans      &trans  &trans                            &none
            >;
        };

        setting {
            bindings = <
&none  &none  &none  &none   &none                       &none         &none         &none    &none  &none
&none  &none  &none  &none   &none   &none       &none   &bt BT_SEL 3  &bt BT_SEL 4  &none    &none  &none
&none  &none  &none  &none   &none   &none       &none   &bt_mac       &bt_ipad      &bt_win  &none  &bt BT_CLR
&none  &none  &none  &trans  &trans  &trans      &trans  &trans                                      &bt BT_CLR_ALL
            >;
        };
    };
};
